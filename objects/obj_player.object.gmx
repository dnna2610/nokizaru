<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_c</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = 0.8;
hsp = 0;
hsp_carry = 0;
vsp = 0;
movespeed = 3;
maxspeed = 4;
jumpspeed_normal = 14;
jumpspeed_powerup = 18;
jumpspeed = jumpspeed_normal;
key_down = 0;
last_wall =0;
fric = 0.25; // from 0 to 1

if (global.backtrack == true ) 
{
    x = obj_door_next.x - 32;
    y = obj_door_next.y;
    global.backtrack = false;
}

//Combat
globalvar attack;
attack = true;
sword = false;
right = true;
//sprite_index = 0;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jumpspeed = jumpspeed_normal;
sprite_index = spr_player;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Code
// Check for input
key_right = keyboard_check ( vk_right );
key_left = -keyboard_check ( vk_left );
key_jump = keyboard_check_pressed ( vk_space ) || keyboard_check_pressed ( vk_up );
key_jump_held = keyboard_check ( vk_space ) || keyboard_check ( vk_up );
key_down = keyboard_check ( vk_down );
movement = key_right + key_left;
acceleration = movement * movespeed;

// relative hsp
hsp = hsp - hsp_carry;
hsp = hsp + acceleration;
acceleration = 0;

// Check for ground and react
ground = place_meeting(x, y+1, obj_wall);
if (ground) {
    hsp *= 1 - obj_player.fric;
    last_wall = 0;
    if (key_jump) {
        vsp = -jumpspeed;
        audio_play_sound ( snd_jump , 0 , false );
    }
} else {
    if ( vsp &lt; 10 ) vsp += grav;
    //Walljumping
    if ( key_jump ) &amp;&amp; ( place_meeting ( x + 1, y, obj_wall ) || place_meeting ( x - 1, y, obj_wall ) )
    {
        if ((last_wall != x+1) &amp;&amp; (last_wall != x-1)){
            vsp = -jumpspeed;       
            if ( place_meeting ( x + 1, y, obj_wall )){
                last_wall  = x+1;
                hsp = -movespeed;
            }
            if ( place_meeting (x-1, y, obj_wall)){
                last_wall = x-1;
                hsp = movespeed;
            }
        }
    }
    if (place_meeting(x, y+1, obj_wall)) last_wall =0;
}
if (hsp &lt; 0){
    hsp= max(hsp, -maxspeed);
}
else if (hsp &gt; 0){  
    hsp = min(hsp, maxspeed);
}

if ((vsp &lt; 0 ) &amp;&amp; ( !key_jump_held )) vsp = max ( vsp , 0 );
hsp += hsp_carry;
hsp_carry = 0;
        
//Horizontal Collision
if(place_meeting( x + hsp, y, obj_wall ) )
{
    while ( !place_meeting ( x + sign ( hsp) , y, obj_wall ) )
    {
        x += sign ( hsp );
    }
    hsp = 0;
}
x += hsp;

//Vertical Collision
if(place_meeting ( x, y + vsp, obj_wall ) )
{
    while ( !place_meeting ( x, y + sign ( vsp ) , obj_wall ) )
    {
        y += sign ( vsp );
    }
    vsp = 0;
}
y += vsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="88">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(attack == true)
{
    attack = false;
    instance_create(x, y, obj_attack);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>right = true;
    image_index = 0;
    image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    right = false;
    image_index = 1;
    image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
